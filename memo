    //表示するString配列
    private let textList = ["tech", "てっく部ずかん", "2018年新卒"]
    
    var animationCount = 0
    func selectAnimation(){
        var index = (Int)(arc4random_uniform(5))
        var titles: [LTMorphingEffect] = [ .anvil, .evaporate, .fall, .pixelate, .scale ]

        while(index==animationCount){
            index = (Int)(arc4random_uniform(5))
        }
        testm.morphingEffect = titles[index]
        animationCount = index
    }

    override func viewDidAppear(_ animated: Bool) {
        //候補:anvil,evaporate,fall,pixelate,scale
        
        var titles: [LTMorphingEffect] = [ .anvil, .evaporate, .fall, .pixelate, .scale ]
        let index = (Int)(arc4random_uniform(5))
        
        testm.morphingEffect = titles[index]
        super.viewDidAppear(animated)
        //タイマーの追加
        timer = Timer.scheduledTimer(timeInterval: 1.0,
                                     target: self,
                                     selector: #selector(update(timer:)), userInfo: nil,
                                     repeats: true)
        timer?.fire()
    }
    
    override func viewDidDisappear(_ animated: Bool) {
        super.viewDidDisappear(animated)
        timer?.invalidate()
    }
    
    @objc func update(timer: Timer) {
        //ここでtextの更新
        testm.text = textList[index]

        //Testtes()
        index += 1
        if index >= textList.count {
            index = 0
        }
        selectAnimation()
    }